[{"path":"https://healthinformaticsut.github.io/CohortContrast/articles/a00_introduction.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction","text":"CohortContrast package designed facilitate cohort exploration. accepts target cohort size OMOP CDM instance allows provide custom control cohort generate one using matching inverse controls. package performs concept-level enrichment analysis provides handy GUI visualization, mapping, trajectory creation","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/articles/a00_introduction.html","id":"initiating-database-connection","dir":"Articles","previous_headings":"","what":"Initiating database connection","title":"Introduction","text":"use CDMConnector package used establish database connection. can configure connection either reading credentials .Renviron file explicitly writing script.","code":"################################################################################ # # Initiate the database connection # #################################################################################  user <- Sys.getenv(\"DB_USERNAME\") pw <- Sys.getenv(\"DB_PASSWORD\") server <- stringr::str_c(Sys.getenv(\"DB_HOST\"), \"/\", Sys.getenv(\"DB_NAME\")) port <- Sys.getenv(\"DB_PORT\")  cdmSchema <-   Sys.getenv(\"OHDSI_CDM\") # Schema which contains the OHDSI Common Data Model cdmVocabSchema <-   Sys.getenv(\"OHDSI_VOCAB\") # Schema which contains the OHDSI Common Data Model vocabulary tables. cdmResultsSchema <-   Sys.getenv(\"OHDSI_RESULTS\") # Schema which contains \"cohort\" table (is not mandatory) writeSchema <-   Sys.getenv(\"OHDSI_WRITE\") # Schema for temporary tables, will be deleted writePrefix <- \"cc_\"  db = DBI::dbConnect(   RPostgres::Postgres(),   dbname = Sys.getenv(\"DB_NAME\"),   host = Sys.getenv(\"DB_HOST\"),   user = Sys.getenv(\"DB_USERNAME\"),   password = Sys.getenv(\"DB_PASSWORD\"),   port  = port )  cdm <- CDMConnector::cdmFromCon(   con = db,   cdmSchema = cdmSchema,   achillesSchema = cdmResultsSchema,   writeSchema = c(schema = writeSchema, prefix = writePrefix), )"},{"path":"https://healthinformaticsut.github.io/CohortContrast/articles/a00_introduction.html","id":"building-a-target-cohort","dir":"Articles","previous_headings":"","what":"Building a target cohort","title":"Introduction","text":"LetÂ´s say want explore cohort breast cancer patients. can import target cohort multiple ways:","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/articles/a00_introduction.html","id":"target-cohort-from-ohdsi-omop-database-","dir":"Articles","previous_headings":"Building a target cohort","what":"1. Target cohort from OHDSI OMOP database.","title":"Introduction","text":"cohort defined ATLAS, can use unique cohort ID. Ensure cohort generated within ATLAS CDM instance.","code":"################################################################################ # # Create target table from OMOP CDM instance (ATLAS's cohort id) # #################################################################################  cohortsTableName = 'cohort' targetCohortId = 1403  targetTable <- CohortContrast::cohortFromCohortTable(cdm = cdm, db = db,    tableName = cohortsTableName, schemaName = cdmResultsSchema, cohortId = targetCohortId)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/articles/a00_introduction.html","id":"target-cohort-from-json-description-file-","dir":"Articles","previous_headings":"Building a target cohort","what":"2. Target cohort from JSON description file.","title":"Introduction","text":"JSON expression cohort (exportable ATLAS), can import cohort directly.","code":"################################################################################ # # Create target table from a JSON # #################################################################################  pathToJSON = '/Users/markushaug/UT/R-packages/Develop/Git/CohortContrast/tests/testthat/inst/JSON'  targetTable <- CohortContrast::cohortFromJSON(pathToJSON = pathToJSON, cdm)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/articles/a00_introduction.html","id":"target-cohort-from-a-csv-file-","dir":"Articles","previous_headings":"Building a target cohort","what":"3. Target cohort from a CSV file.","title":"Introduction","text":"can import target table CSV. file columns present inside cohort table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date).","code":"################################################################################ # # Create target table from a CSV # ################################################################################# pathToCsv = '/Users/markushaug/UT/R-packages/Develop/Git/CohortContrast/tests/testthat/inst/CSV/cohort/cohort.csv' targetTable <- CohortContrast::cohortFromCSV(pathToCsv = pathToCsv, cohortId = 2)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/articles/a00_introduction.html","id":"target-cohort-from-a-table","dir":"Articles","previous_headings":"Building a target cohort","what":"4. Target cohort from a table","title":"Introduction","text":"can also use table memory. cases 2-4 specify cohortId parameter inside function call, multiple cohorts present advised.","code":"################################################################################ # # Create target table # ################################################################################# library(tibble) #Create the dataframe  data <- tribble(    ~cohort_definition_id, ~subject_id, ~cohort_start_date, ~cohort_end_date,    1, 4804, '1997-03-23', '2018-10-29',    1, 4861, '1982-06-02', '2019-05-23',    1, 1563, '1977-06-25', '2019-04-20',    1, 2830, '2006-08-11', '2019-01-14',    1, 1655, '2004-09-29', '2019-05-24',    2, 5325, '1982-06-02', '2019-03-17',    2, 3743, '1997-03-23', '2018-10-07',    2, 2980, '2004-09-29', '2018-04-01',    2, 1512, '2006-08-11', '2017-11-29',    2, 2168, '1977-06-25', '2018-11-22' ) targetTable <- cohortFromDataTable(data = data, cohortId = 2)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/articles/a00_introduction.html","id":"building-a-control-cohort","dir":"Articles","previous_headings":"","what":"Building a control cohort","title":"Introduction","text":"control cohort cohort target cohort compared . means check proportions concept occurrence two cohorts. result analysis heavily dependant , therefore selected care. control cohort can generated way target cohort shown generated examples 1-4. automatic ways package CohortContrast provides:","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/articles/a00_introduction.html","id":"control-cohort-based-on-matches","dir":"Articles","previous_headings":"Building a control cohort","what":"1. Control cohort based on matches","title":"Introduction","text":"One scientific approaches select matches database (based age sex). parameters ratio shown many controls want case. Also min (least many matches error otherwise) max (maximum n matches) parameters can used.","code":"################################################################################ # # Create control cohort table based on matches # ################################################################################# controlTable = CohortContrast::createControlCohortMatching(cdm = cdm, targetTable = targetTable, ratio = 4)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/articles/a00_introduction.html","id":"control-cohort-based-on-inverse-controls","dir":"Articles","previous_headings":"Building a control cohort","what":"2. Control cohort based on inverse controls","title":"Introduction","text":"Sometimes makes sense use inverse controls (subjects observation period described target cohort). case example want see contrast diagnosis.","code":"################################################################################ # # Create control cohort table based on inverse controls # ################################################################################# controlTable = CohortContrast::createControlCohortInverse(cdm = cdm, targetTable = targetTable)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/articles/a00_introduction.html","id":"other-considerations","dir":"Articles","previous_headings":"","what":"Other considerations","title":"Introduction","text":"constructed cohorts hand strongly advised check resolve overlap conflicts well conflicts observation period inside OMOP CDM.","code":"################################################################################ # # Resolve conflicts # ################################################################################# targetTable = CohortContrast::resolveCohortTableOverlaps(cdm = cdm, cohortTable = targetTable) controlTable = CohortContrast::resolveCohortTableOverlaps(cdm = cdm, cohortTable = controlTable)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/articles/a01_execution.html","id":"executing-the-study","dir":"Articles","previous_headings":"","what":"Executing the study","title":"Execution","text":"Now initiated database connection created targetTable well cohortTable ready initiate execution function study.","code":"################################################################################ # # Execute # ################################################################################  data = CohortContrast::CohortContrast(   cdm,   targetTable = targetTable,   controlTable = controlTable,   pathToResults = getwd(),   domainsIncluded = c(     \"Drug\",     \"Condition\",     \"Measurement\",     \"Observation\",     \"Procedure\",     \"Visit\",     \"Visit detail\"   ),   prevalenceCutOff = 2.5,   topK = FALSE, # Number of features to export   presenceFilter = 0.2, # 0-1, percentage of people who must have the chosen feature present   complementaryMappingTable = FALSE, # A table for manual concept_id and concept_name mapping (merge)   getSourceData = FALSE, # If true will generate summaries with source data as well   runZTests = TRUE,   runLogitTests = FALSE,   createOutputFiles = TRUE,   safeRun = FALSE,   complName = \"CohortContrastStudy\")"},{"path":"https://healthinformaticsut.github.io/CohortContrast/articles/a01_execution.html","id":"the-parameters","dir":"Articles","previous_headings":"","what":"The parameters","title":"Execution","text":"multiple parameters can tweak different outcomes:","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/articles/a01_execution.html","id":"mandatory","dir":"Articles","previous_headings":"The parameters","what":"Mandatory:","title":"Execution","text":"cdm Connection database targetTable Table target cohort controlTable Table control cohort pathToResults Path results folder, can projectâs working directory domainsIncluded list CDM domains include, choose Drug, Condition, Measurement, Observation, Procedure, Visit, Visit detail complName Name output file","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/articles/a01_execution.html","id":"customization","dir":"Articles","previous_headings":"The parameters","what":"Customization:","title":"Execution","text":"runZTests boolean running Z-tests, tests ran prevalence metrics runLogitTests boolean logit-tests prevalence, builds model predicting whether patient target control runKSTests boolean Kolmogorov-Smirnov tests occurrence time (vs uniform distribution) getAllAbstractions boolean creating abstractionsâ levels imported data, useful using GUI exploring data maximumAbstractionLevel Maximum level abstraction allowed, getAllAbstractions TRUE, hierarchy concept_hierarchy table used getSourceData boolean fetching source data, data abstraction level used map OMOP CDM lookbackDays FALSE integer stating look-back period cohort index date. can used inside GUI slider adding look-back data. prevalenceCutOff numeric FALSE, set, removes concepts present (target) prevalenceCutOff times. Eg set 2, concepts present double target exported. topK numeric FALSE, set, keeps maximum number features analysis. Maximum number features exported. presenceFilter numeric FALSE, set, removes features represented fewer target cohort subjects given percentage complementaryMappingTable data frame FALSE. Mappingtable mapping concept_ids present, columns CONCEPT_ID, CONCEPT_ID.new, CONCEPT_NAME.new, numCores Number cores allocate parallel processing, default max number cores - 1 createOutputFiles Boolean creating output files, default value TRUE safeRun boolean returning summarized data","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/articles/a01_execution.html","id":"notes","dir":"Articles","previous_headings":"The parameters","what":"Notes:","title":"Execution","text":"using GUI prevalenceCutOff, presenceFilter can changed slider. effect runZTests runLogitTests can toggled. function output file complName, case CohortContrastStudy.rds pathToResults path.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Markus Haug. Author, maintainer. Raivo Kolde. Author.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Haug M, Kolde R (2024). CohortContrast: CohortContrast: Package cohorts' trajectory feature selection. R package version 0.0.0.900, https://healthinformaticsut.github.io/CohortContrast/.","code":"@Manual{,   title = {CohortContrast: CohortContrast: Package for cohorts' trajectory feature selection},   author = {Markus Haug and Raivo Kolde},   year = {2024},   note = {R package version 0.0.0.900},   url = {https://healthinformaticsut.github.io/CohortContrast/}, }"},{"path":"https://healthinformaticsut.github.io/CohortContrast/index.html","id":"cohortcontrast","dir":"","previous_headings":"","what":"CohortContrast: Package for cohorts' trajectory feature selection","title":"CohortContrast: Package for cohorts' trajectory feature selection","text":"goal CohortContrast facilitate comparison cohorts specified domains across OMOP CDM datasets. enables users analyze visualize contrast target control cohorts effectively.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"CohortContrast: Package for cohorts' trajectory feature selection","text":"development version package GitHub:","code":"# install.packages(\"devtools\") devtools::install_github(\"HealthInformaticsUT/CohortContrast\")"},{"path":"https://healthinformaticsut.github.io/CohortContrast/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"CohortContrast: Package for cohorts' trajectory feature selection","text":"use CohortContrast, follow steps configure environment input data: Credentials: Make sure can create connection OHDS CDM instance using CDMConnector package. Create target control tables Use functions cohortFromCohortTable, cohortFromDataTable, cohortFromJSON cohortFromCSV indicating target control cohort tables. can use createControlCohortInverse cohortFromCohortTable generating control tables. Run Study: Execute study using CohortContrast functions.","code":"pathToResults = getwd()  ################################################################################ # # Initiate the database connection # #################################################################################  user <- Sys.getenv(\"DB_USERNAME\") #TODO pw <- Sys.getenv(\"DB_PASSWORD\") #TODO server <- stringr::str_c(Sys.getenv(\"DB_HOST\"), \"/\", Sys.getenv(\"DB_NAME\")) #TODO port <- Sys.getenv(\"DB_PORT\") #TODO  cdmSchema <-   Sys.getenv(\"OHDSI_CDM\") #TODO # Schema which contains the OHDSI Common Data Model cdmVocabSchema <-   Sys.getenv(\"OHDSI_VOCAB\") #TODO # Schema which contains the OHDSI Common Data Model vocabulary tables. cdmResultsSchema <-   Sys.getenv(\"OHDSI_RESULTS\") #TODO # Schema which contains \"cohort\" table (is not mandatory) writeSchema <-   Sys.getenv(\"OHDSI_WRITE\") #TODO # Schema for temporary tables, will be deleted writePrefix <- \"cc_\"  db = DBI::dbConnect(   RPostgres::Postgres(),   dbname = Sys.getenv(\"DB_NAME\"),   host = Sys.getenv(\"DB_HOST\"),   user = Sys.getenv(\"DB_USERNAME\"),   password = Sys.getenv(\"DB_PASSWORD\"),   port  = port )  cdm <- CDMConnector::cdmFromCon(   con = db,   cdmSchema = cdmSchema,   achillesSchema = cdmResultsSchema,   writeSchema = c(schema = writeSchema, prefix = writePrefix), ) cohortsTableSchemaName = cdmResultsSchema cohortsTableName = 'cohort' targetCohortId = 568 controlCohortId = 571  ################################################################################ # # CDM target and control modula # ################################################################################  targetTable <- CohortContrast::cohortFromCohortTable(cdm = cdm, db = db,    tableName = cohortsTableName, schemaName = cdmResultsSchema, cohortId = targetCohortId)      controlTable <- CohortContrast::cohortFromCohortTable(cdm = cdm, db = db,   tableName = cohortsTableName, schemaName = cdmResultsSchema, cohortId = controlCohortId) ################################################################################ # # Execute # ################################################################################  data = CohortContrast::CohortContrast(   cdm,   targetTable = targetTable,   controlTable = controlTable,   pathToResults = getwd(),   domainsIncluded = c(     \"Drug\",     \"Condition\",     \"Measurement\",     \"Observation\",     \"Procedure\",     \"Visit\",     \"Visit detail\"   ),   prevalenceCutOff = 2.5,   topK = FALSE, # Number of features to export   presenceFilter = 0.2, # 0-1, percentage of people who must have the chosen feature present   complementaryMappingTable = FALSE, # A table for manual concept_id and concept_name mapping (merge)   getSourceData = FALSE, # If true will generate summaries with source data as well   runZTests = TRUE,   runLogitTests = FALSE,   createOutputFiles = TRUE,   safeRun = FALSE,   complName = \"CohortContrastStudy\")"},{"path":"https://healthinformaticsut.github.io/CohortContrast/index.html","id":"outputs","dir":"","previous_headings":"","what":"Outputs","title":"CohortContrast: Package for cohorts' trajectory feature selection","text":"CohortContrast package generates following outputs: Running CohortContrast returns list tables (patient level summarised data target control) well saves object. can analysed GUI. Using GUI runCohortContrastGUI generates plots well saves last state analysis GUI. example .rds file ./inst/example/example.rds. can view GUI copy pathToResults path.","code":"CohortContrast::runCohortContrastGUI(  pathToResults = pathToResults )"},{"path":"https://healthinformaticsut.github.io/CohortContrast/index.html","id":"demo","dir":"","previous_headings":"","what":"Demo","title":"CohortContrast: Package for cohorts' trajectory feature selection","text":"Check demo malignant neoplasm breast cohort!","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/index.html","id":"more-information","dir":"","previous_headings":"Demo","what":"More information","title":"CohortContrast: Package for cohorts' trajectory feature selection","text":"CohortContrast provides much insight generation possibilities. See package vignettes details (coming soon â¦). feature requests create issues Github contact Markus Haug (markus.haug@ut.ee) personally.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/C2TCaller.html","id":null,"dir":"Reference","previous_headings":"","what":"This function acts as a Cohort2Trajectory wrapper â C2TCaller","title":"This function acts as a Cohort2Trajectory wrapper â C2TCaller","text":"function acts Cohort2Trajectory wrapper","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/C2TCaller.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function acts as a Cohort2Trajectory wrapper â C2TCaller","text":"","code":"C2TCaller(   data,   pathToResults,   trajectoryType = 1,   stateSelectionType = 1,   lengthOfStay = 30,   mergeStates = FALSE,   mergeThreshold = 0.5,   outOfCohortAllowed = FALSE )"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/C2TCaller.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function acts as a Cohort2Trajectory wrapper â C2TCaller","text":"data CohortContrast object pathToResults Path data saved trajectoryType Type trajectories generate (Discrete - 0, continuous - 1 ) stateSelectionType State selection type (First occurring - 1, Largest overlap - 2, Priority - 3) lengthOfStay discrete trajectory generated indicate state length days (integer) mergeStates Boolean merging overlapping states mergeThreshold value 0 1 indicating threshold overlap merging - percentage outOfCohortAllowed Boolean allowing include state occurrences outside cohort period","code":""},{"path":[]},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/CohortContrast.html","id":null,"dir":"Reference","previous_headings":"","what":"Run CohortContrast Analysis â CohortContrast","title":"Run CohortContrast Analysis â CohortContrast","text":"Run CohortContrast Analysis","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/CohortContrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run CohortContrast Analysis â CohortContrast","text":"","code":"CohortContrast(   cdm,   targetTable = NULL,   controlTable = NULL,   pathToResults = getwd(),   domainsIncluded = c(\"Drug\", \"Condition\", \"Measurement\", \"Observation\", \"Procedure\",     \"Visit\", \"Visit detail\"),   prevalenceCutOff = 10,   topK = FALSE,   presenceFilter = 0.005,   lookbackDays = FALSE,   complementaryMappingTable = NULL,   runZTests = TRUE,   runLogitTests = TRUE,   runKSTests = TRUE,   getAllAbstractions = FALSE,   getSourceData = FALSE,   maximumAbstractionLevel = 5,   createOutputFiles = TRUE,   complName = NULL,   numCores = parallel::detectCores() - 1,   safeRun = FALSE )"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/CohortContrast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run CohortContrast Analysis â CohortContrast","text":"cdm Connection database targetTable Table target cohort (tbl) controlTable Table control cohort (tbl) pathToResults Path results folder, can project's working directory domainsIncluded list CDM domains include prevalenceCutOff numeric > set, removes concepts present (target) prevalenceCutOff times topK numeric > set, keeps number features analysis. Maximum number features exported. presenceFilter numeric > set, removes features represented less given percentage lookbackDays FALSE integer stating lookback period cohort index date complementaryMappingTable Mappingtable mapping concept_ids present, columns CONCEPT_ID, CONCEPT_ID.new, CONCEPT_NAME.new, runZTests boolean Z-tests runLogitTests boolean logit-tests runKSTests boolean Kolmogorov-Smirnov tests getAllAbstractions boolean creating abstractions' levels imported data, useful using GUI exploring data getSourceData boolean fetching source data maximumAbstractionLevel Maximum level abstraction allowed createOutputFiles Boolean creating output files, default value TRUE complName Name output file numCores Number cores allocate parallel processing safeRun boolean returning summarized data","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/CohortContrast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run CohortContrast Analysis â CohortContrast","text":"","code":"if (FALSE) { # \\dontrun{ control <- data.frame(   cohort_definition_id = c(1, 1, 1, 1, 1),   subject_id = c(5325, 3743, 2980, 1512, 2168),   cohort_start_date = as.Date(c(\"1982-06-02\", \"1997-03-23\",    \"2004-09-29\", \"2006-08-11\", \"1977-06-25\")),   cohort_end_date = as.Date(c(\"2019-03-17\", \"2018-10-07\",    \"2018-04-01\", \"2017-11-29\", \"2018-11-22\")) )  target <- data.frame(   cohort_definition_id = c(1, 1, 1, 1, 1),   subject_id = c(4804, 4861, 1563, 2830, 1655),   cohort_start_date = as.Date(c(\"1997-03-23\", \"1982-06-02\",    \"1977-06-25\", \"2006-08-11\", \"2004-09-29\")),   cohort_end_date = as.Date(c(\"2018-10-29\", \"2019-05-23\",    \"2019-04-20\", \"2019-01-14\", \"2019-05-24\")) )  control$cohort_definition_id = 100 target$cohort_definition_id = 500  cohort = rbind(control, target)  con <- DBI::dbConnect(duckdb::duckdb(), dbdir = CDMConnector::eunomia_dir(\"GiBleed\")) DBI::dbExecute(con, \"CREATE SCHEMA IF NOT EXISTS example\") DBI::dbWriteTable(con,   DBI::SQL('\"example\".\"cohort\"'), cohort)  cdm <- CDMConnector::cdm_from_con(con, cdm_name = \"eunomia\",  cdm_schema = \"main\", write_schema = \"main\")   targetTable <- cohortFromCohortTable(cdm = cdm, db = con,   tableName = \"cohort\", schemaName = 'example', cohortId = 500) controlTable <- cohortFromCohortTable(cdm = cdm, db = con,  tableName = \"cohort\", schemaName = 'example', cohortId = 100)   pathToResults = getwd()  data = CohortContrast(   cdm,   targetTable = targetTable,   controlTable = controlTable,   pathToResults,   domainsIncluded = c(     \"Drug\"   ),   prevalenceCutOff = 0.1,   topK = FALSE,   presenceFilter = 0.005,   complementaryMappingTable = NULL,   runZTests = FALSE,   runLogitTests = FALSE,   createOutputFiles = FALSE,   numCores = 1 )  DBI::dbDisconnect(con) } # }"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/calculate_data_features.html","id":null,"dir":"Reference","previous_headings":"","what":"This filters data based on prevalence difference ratio and return the nHighestPrevalenceDifference greates differences â calculate_data_features","title":"This filters data based on prevalence difference ratio and return the nHighestPrevalenceDifference greates differences â calculate_data_features","text":"filters data based prevalence difference ratio return nHighestPrevalenceDifference greates differences","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/calculate_data_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This filters data based on prevalence difference ratio and return the nHighestPrevalenceDifference greates differences â calculate_data_features","text":"","code":"calculate_data_features(data, nHighestPrevalenceDifference)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/calculate_data_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This filters data based on prevalence difference ratio and return the nHighestPrevalenceDifference greates differences â calculate_data_features","text":"data Data list object nHighestPrevalenceDifference Number features highest prevalence difference ratio keep","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/calculate_inverse_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for calculating inverse dates â calculate_inverse_dates","title":"Function for calculating inverse dates â calculate_inverse_dates","text":"Function calculating inverse dates","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/calculate_inverse_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for calculating inverse dates â calculate_inverse_dates","text":"","code":"calculate_inverse_dates(   observation_period_start_date,   observation_period_end_date,   cohort_start_date,   cohort_end_date )"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/calculate_inverse_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for calculating inverse dates â calculate_inverse_dates","text":"observation_period_start_date Observation period start date observation_period_end_date Observation period end date cohort_start_date Cohort inclusion period start date cohort_end_date Cohort inclusion end date","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/checkForCorrectRelationDefinitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to check if target and control schemas and tables are defined sufficiently â checkForCorrectRelationDefinitions","title":"Function to check if target and control schemas and tables are defined sufficiently â checkForCorrectRelationDefinitions","text":"Function check target control schemas tables defined sufficiently","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/checkForCorrectRelationDefinitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to check if target and control schemas and tables are defined sufficiently â checkForCorrectRelationDefinitions","text":"","code":"checkForCorrectRelationDefinitions(   targetTableName = NULL,   controlTableName = NULL,   targetTableSchemaName = NULL,   controlTableSchemaName = NULL,   cohortsTableSchemaName = NULL,   cohortsTableName = NULL,   targetCohortId = NULL,   controlCohortId = NULL,   pathToCohortsCSVFile = NULL )"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/checkForCorrectRelationDefinitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to check if target and control schemas and tables are defined sufficiently â checkForCorrectRelationDefinitions","text":"targetTableName Name table target cohort defined controlTableName Name table control cohort defined targetTableSchemaName Name schema target cohort table defined controlTableSchemaName Name schema control cohort table defined cohortsTableSchemaName Name schema cohorts' table defined cohortsTableName Name table cohorts defined targetCohortId id target cohort cohorts' table controlCohortId id control cohort cohorts' table pathToCohortsCSVFile path CSV file data table cohorts","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/cohortFromCSV.html","id":null,"dir":"Reference","previous_headings":"","what":"Read cohort from CSV â cohortFromCSV","title":"Read cohort from CSV â cohortFromCSV","text":"Read cohort CSV","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/cohortFromCSV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read cohort from CSV â cohortFromCSV","text":"","code":"cohortFromCSV(pathToCsv, cohortId = NULL)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/cohortFromCSV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read cohort from CSV â cohortFromCSV","text":"pathToCsv Path cohort data CSV file cohortId id cohort cohorts' table, NULL whole table imported","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/cohortFromCSV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read cohort from CSV â cohortFromCSV","text":"tbl object CohortContrast usage","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/cohortFromCSV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read cohort from CSV â cohortFromCSV","text":"","code":"if (FALSE) { # \\dontrun{ pathToCsv = './cohorts.csv' targetTable <- cohortFromCSV(pathToCsv = pathToCsv, cohortId = 2) } # }"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/cohortFromCohortTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Read cohort from database cohort table â cohortFromCohortTable","title":"Read cohort from database cohort table â cohortFromCohortTable","text":"Read cohort database cohort table","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/cohortFromCohortTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read cohort from database cohort table â cohortFromCohortTable","text":"","code":"cohortFromCohortTable(   cdm,   db,   tableName = NULL,   schemaName = NULL,   cohortId = NULL )"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/cohortFromCohortTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read cohort from database cohort table â cohortFromCohortTable","text":"cdm CDMConnector object db Database instance (DBI) tableName Name table cohort defined schemaName Name schema cohort table defined cohortId id cohort cohorts' table, NULL whole table imported","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/cohortFromCohortTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read cohort from database cohort table â cohortFromCohortTable","text":"tbl object CohortContrast usage","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/cohortFromCohortTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read cohort from database cohort table â cohortFromCohortTable","text":"","code":"if (FALSE) { # \\dontrun{ targetTable <- cohortFromCohortTable(cdm = cdm, db = db,  tableName = \"cohort\", schemaName = 'ohdsi_results', cohortId = 1389) } # } if (FALSE) { # \\dontrun{ targetTable <- cohortFromCohortTable(cdm = cdm, db = db,  tableName = \"asthma\", schemaName = 'user_peter') } # }"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/cohortFromDataTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Read cohort from data.frame object â cohortFromDataTable","title":"Read cohort from data.frame object â cohortFromDataTable","text":"Read cohort data.frame object","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/cohortFromDataTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read cohort from data.frame object â cohortFromDataTable","text":"","code":"cohortFromDataTable(data, cohortId = NULL)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/cohortFromDataTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read cohort from data.frame object â cohortFromDataTable","text":"data data frame cohort data cohortId id cohort cohorts' table, NULL whole table imported","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/cohortFromDataTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read cohort from data.frame object â cohortFromDataTable","text":"tbl object CohortContrast usage","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/cohortFromDataTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read cohort from data.frame object â cohortFromDataTable","text":"","code":"if (FALSE) { # \\dontrun{ # Load necessary package library(tibble)  # Create the dataframe data <- tribble(   ~cohort_definition_id, ~subject_id, ~cohort_start_date, ~cohort_end_date,   1, 4804, '1997-03-23', '2018-10-29',   1, 4861, '1982-06-02', '2019-05-23',   1, 1563, '1977-06-25', '2019-04-20',   1, 2830, '2006-08-11', '2019-01-14',   1, 1655, '2004-09-29', '2019-05-24',   2, 5325, '1982-06-02', '2019-03-17',   2, 3743, '1997-03-23', '2018-10-07',   2, 2980, '2004-09-29', '2018-04-01',   2, 1512, '2006-08-11', '2017-11-29',   2, 2168, '1977-06-25', '2018-11-22' ) targetTable <- cohortFromDataTable(data = data, cohortId = 2) } # }"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/cohortFromJSON.html","id":null,"dir":"Reference","previous_headings":"","what":"Read cohort from JSON â cohortFromJSON","title":"Read cohort from JSON â cohortFromJSON","text":"Read cohort JSON","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/cohortFromJSON.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read cohort from JSON â cohortFromJSON","text":"","code":"cohortFromJSON(pathToJSON, cdm, cohortId = NULL)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/cohortFromJSON.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read cohort from JSON â cohortFromJSON","text":"pathToJSON Path cohort data JSON file cdm Connection database (package CDMConnector) cohortId id cohort cohorts' table, NULL whole table imported","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/cohortFromJSON.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read cohort from JSON â cohortFromJSON","text":"tbl object CohortContrast usage","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/cohortFromJSON.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read cohort from JSON â cohortFromJSON","text":"","code":"if (FALSE) { # \\dontrun{ pathToJSON = './JSON/' targetTable <- cohortFromJSON(pathToJSON = pathToJSON, cdm, cohortId = 2) } # }"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/convertToAbsolutePath.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a relative path to an absolute path â convertToAbsolutePath","title":"Convert a relative path to an absolute path â convertToAbsolutePath","text":"internal function converts given relative path absolute path using built-`normalizePath()` function.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/convertToAbsolutePath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a relative path to an absolute path â convertToAbsolutePath","text":"","code":"convertToAbsolutePath(path)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/convertToAbsolutePath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a relative path to an absolute path â convertToAbsolutePath","text":"path string representing file directory path, may relative absolute.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/convertToAbsolutePath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a relative path to an absolute path â convertToAbsolutePath","text":"string absolute path. file directory exist,         `normalizePath()` throw error due `mustWork = TRUE`.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/convertToAbsolutePath.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a relative path to an absolute path â convertToAbsolutePath","text":"function utilizes `normalizePath()` handle Windows Unix-based          systems. converts provided path, even relative,          absolute path. ensures paths formatted forward slashes          Windows systems setting `winslash = \"/\"`.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/convertToAbsolutePath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a relative path to an absolute path â convertToAbsolutePath","text":"","code":"if (FALSE) { # \\dontrun{   relative_path <- \"relative/path/to/file.txt\"   absolute_path <- convertToAbsolutePath(relative_path)   print(absolute_path) } # }"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createC2TInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for creating dataset which can be used as input for Cohort2Trajectory package â createC2TInput","title":"Function for creating dataset which can be used as input for Cohort2Trajectory package â createC2TInput","text":"Function creating dataset can used input Cohort2Trajectory package","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createC2TInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for creating dataset which can be used as input for Cohort2Trajectory package â createC2TInput","text":"","code":"createC2TInput(   data,   cdm,   targetCohortId = \"target\",   complementaryMappingTable = NULL )"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createC2TInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for creating dataset which can be used as input for Cohort2Trajectory package â createC2TInput","text":"data Data list object cdm Connection database (CDMConnector) targetCohortId Target cohort id complementaryMappingTable Mapping table mapping concept_ids present","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createC2TInput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for creating dataset which can be used as input for Cohort2Trajectory package â createC2TInput","text":"","code":"if (FALSE) { # \\dontrun{   data <- readRDS(\"./snapshots/CohortContrastDataSnapshot.rds\")   user <- Sys.getenv(\"DB_USERNAME\")   pw <- Sys.getenv(\"DB_PASSWORD\")   server <- stringr::str_c(Sys.getenv(\"DB_HOST\"), \"/\", Sys.getenv(\"DB_NAME\"))   port <- Sys.getenv(\"DB_PORT\")    cdmSchema <-     Sys.getenv(\"OHDSI_CDM\")   cdmVocabSchema <-     Sys.getenv(\"OHDSI_VOCAB\")   cdmResultsSchema <-     Sys.getenv(\"OHDSI_RESULTS\")   writeSchema <-     Sys.getenv(\"OHDSI_WRITE\")   writePrefix <- \"cc_\"    db = DBI::dbConnect(     RPostgres::Postgres(),     dbname = Sys.getenv(\"DB_NAME\"),     host = Sys.getenv(\"DB_HOST\"),     user = Sys.getenv(\"DB_USERNAME\"),     password = Sys.getenv(\"DB_PASSWORD\"),     port = port   )    cdm <- CDMConnector::cdmFromCon(     con = db,     cdmSchema = cdmSchema,     achillesSchema = cdmResultsSchema,     writeSchema = list(schema = writeSchema, prefix = writePrefix)   )    data = createC2TInput(data, cdm) } # }"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createCohortContrastCdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert cohort tables to CDM instance, preparing them from CohortContrast analysis â createCohortContrastCdm","title":"Insert cohort tables to CDM instance, preparing them from CohortContrast analysis â createCohortContrastCdm","text":"Insert cohort tables CDM instance, preparing CohortContrast analysis","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createCohortContrastCdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert cohort tables to CDM instance, preparing them from CohortContrast analysis â createCohortContrastCdm","text":"","code":"createCohortContrastCdm(cdm, targetTable = NULL, controlTable = NULL)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createCohortContrastCdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert cohort tables to CDM instance, preparing them from CohortContrast analysis â createCohortContrastCdm","text":"cdm CDMConnector object targetTable Table target cohort (tbl) controlTable Table control cohort (tbl)","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createCohortContrastCdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert cohort tables to CDM instance, preparing them from CohortContrast analysis â createCohortContrastCdm","text":"object dataframes updated cdm object","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createCohortContrastCdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert cohort tables to CDM instance, preparing them from CohortContrast analysis â createCohortContrastCdm","text":"","code":"if (FALSE) { # \\dontrun{ user <- Sys.getenv(\"DB_USERNAME\") #TODO pw <- Sys.getenv(\"DB_PASSWORD\") #TODO server <- stringr::str_c(Sys.getenv(\"DB_HOST\"), \"/\", Sys.getenv(\"DB_NAME\")) #TODO port <- Sys.getenv(\"DB_PORT\") #TODO cdmSchema <-   Sys.getenv(\"OHDSI_CDM\") cdmVocabSchema <-   Sys.getenv(\"OHDSI_VOCAB\") cdmResultsSchema <-   Sys.getenv(\"OHDSI_RESULTS\") writeSchema <-   Sys.getenv(\"OHDSI_WRITE\") writePrefix <- \"cc_\"  db = DBI::dbConnect(   RPostgres::Postgres(),   dbname = Sys.getenv(\"DB_NAME\"),   host = Sys.getenv(\"DB_HOST\"),   user = Sys.getenv(\"DB_USERNAME\"),   password = Sys.getenv(\"DB_PASSWORD\"),   port  = port )  cdm <- CDMConnector::cdmFromCon(   con = db,   cdmSchema = cdmSchema,   achillesSchema = cdmResultsSchema,   writeSchema = c(schema = writeSchema, prefix = writePrefix), )   targetTable <- cohortFromCohortTable(cdm = cdm, db = db,  tableName = \"cohort\", schemaName = cdmResultsSchema, cohortId = 1) controlTable <- cohortFromCohortTable(cdm = cdm, db = db,  tableName = \"cohort\", schemaName = cdmResultsSchema, cohortId = 2)  cdm <- createCohortContrastCdm(cdm = cdm, targetTable = targetTable, controlTable = controlTable) } # }"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createComplementaryMappingTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for creating the complementary mapping table which can be used in CohortContrast execution function â createComplementaryMappingTable","title":"Function for creating the complementary mapping table which can be used in CohortContrast execution function â createComplementaryMappingTable","text":"Function creating complementary mapping table can used CohortContrast execution function","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createComplementaryMappingTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for creating the complementary mapping table which can be used in CohortContrast execution function â createComplementaryMappingTable","text":"","code":"createComplementaryMappingTable(conceptIds, conceptNames)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createComplementaryMappingTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for creating the complementary mapping table which can be used in CohortContrast execution function â createComplementaryMappingTable","text":"conceptIds Array concept ids use conceptNames Matching array concept names use","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createControlCohortInverse.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for creating automatic matches based on inverse control logic â createControlCohortInverse","title":"Function for creating automatic matches based on inverse control logic â createControlCohortInverse","text":"Function creating automatic matches based inverse control logic","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createControlCohortInverse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for creating automatic matches based on inverse control logic â createControlCohortInverse","text":"","code":"createControlCohortInverse(cdm, targetTable)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createControlCohortInverse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for creating automatic matches based on inverse control logic â createControlCohortInverse","text":"cdm Connection database (package CDMConnector) targetTable cohort tibble contains subjects' cohort data","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createControlCohortInverse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for creating automatic matches based on inverse control logic â createControlCohortInverse","text":"","code":"if (FALSE) createControlCohortInverse(cdm = cdm, targetTable = targetTable) # \\dontrun{}"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createControlCohortMatching.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for creating automatic matches based on age and sex â createControlCohortMatching","title":"Function for creating automatic matches based on age and sex â createControlCohortMatching","text":"Function creating automatic matches based age sex","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createControlCohortMatching.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for creating automatic matches based on age and sex â createControlCohortMatching","text":"","code":"createControlCohortMatching(   cdm,   targetTable,   ratio = 1,   max = NULL,   min = NULL )"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createControlCohortMatching.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for creating automatic matches based on age and sex â createControlCohortMatching","text":"cdm Connection database (package CDMConnector) targetTable cohort tibble contains subjects' cohort data ratio ratio number matches generated max Maximum ratio use min Minimum ratio use","code":""},{"path":[]},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createDataFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for extracting n features â createDataFeatures","title":"Function for extracting n features â createDataFeatures","text":"Function extracting n features","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createDataFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for extracting n features â createDataFeatures","text":"","code":"createDataFeatures(data, topK)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createDataFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for extracting n features â createDataFeatures","text":"data Data list object topK numeric > set, keeps number features analysis. Maximum number features exported.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createPathToResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to ensure that the path to results exists, creating mandatory subdirectories if necessary â createPathToResults","title":"Function to ensure that the path to results exists, creating mandatory subdirectories if necessary â createPathToResults","text":"Function ensure path results exists, creating mandatory subdirectories necessary","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createPathToResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to ensure that the path to results exists, creating mandatory subdirectories if necessary â createPathToResults","text":"","code":"createPathToResults(pathToResults)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/createPathToResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to ensure that the path to results exists, creating mandatory subdirectories if necessary â createPathToResults","text":"pathToResults path results stored","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/generateMappingTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a mapping table with predefined mmaximum abstraction level â generateMappingTable","title":"Create a mapping table with predefined mmaximum abstraction level â generateMappingTable","text":"Create mapping table predefined mmaximum abstraction level","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/generateMappingTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a mapping table with predefined mmaximum abstraction level â generateMappingTable","text":"","code":"generateMappingTable(   cdm,   abstractionLevel = 10,   data = NULL,   concept_ancestor = NULL,   concept = NULL,   maxMinDataFrame = NULL )"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/generateMappingTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a mapping table with predefined mmaximum abstraction level â generateMappingTable","text":"cdm Connection database abstractionLevel Maximum abstraction level allowed data CohortContrastObject returned CohortContrast function concept_ancestor Data frame concept_ancestor table concept Data frame concept table maxMinDataFrame dataframe columns descendant_concept_id max_levels_of_separation","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/generateSourceTables.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate source code analysis tables â generateSourceTables","title":"Generate source code analysis tables â generateSourceTables","text":"Generate source code analysis tables","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/generateSourceTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate source code analysis tables â generateSourceTables","text":"","code":"generateSourceTables(   data,   domainsIncluded = c(\"Drug\", \"Condition\", \"Measurement\", \"Observation\", \"Procedure\",     \"Visit\", \"Visit detail\") )"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/generateSourceTables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate source code analysis tables â generateSourceTables","text":"data CohortContrast object domainsIncluded list CDM domains include","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/generateSourceTables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate source code analysis tables â generateSourceTables","text":"object dataframes updated cdm object","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/generateTables.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate analysis tables Create relations of cohorts (target and control) to the database â generateTables","title":"Generate analysis tables Create relations of cohorts (target and control) to the database â generateTables","text":"Generate analysis tables Create relations cohorts (target control) database","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/generateTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate analysis tables Create relations of cohorts (target and control) to the database â generateTables","text":"","code":"generateTables(   cdm,   domainsIncluded = c(\"Drug\", \"Condition\", \"Measurement\", \"Observation\", \"Procedure\",     \"Visit\", \"Visit detail\") )"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/generateTables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate analysis tables Create relations of cohorts (target and control) to the database â generateTables","text":"cdm CDMConnector object: connection database domainsIncluded list CDM domains include","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/generateTables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate analysis tables Create relations of cohorts (target and control) to the database â generateTables","text":"object dataframes updated cdm object","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/getHeatmapPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Heatmap Plot â getHeatmapPlot","title":"Generate a Heatmap Plot â getHeatmapPlot","text":"function generates heatmap using CohortContrast GUI object. extracts necessary components ccObject passes `plot_heatmap` function generate plot.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/getHeatmapPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Heatmap Plot â getHeatmapPlot","text":"","code":"getHeatmapPlot(ccObject)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/getHeatmapPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Heatmap Plot â getHeatmapPlot","text":"ccObject object returned CohortContrast GUI, typically created \"Create Visual Snapshot\" button pressed. contain target_row_annotation, target_col_annotation, target_matrix components.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/getHeatmapPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Heatmap Plot â getHeatmapPlot","text":"plot object generated `plot_heatmap`.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/getHeatmapPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Heatmap Plot â getHeatmapPlot","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `ccObject` (visual snapshot) is already created via CohortContrast GUI ccObject <- readRDS(\"./visual_snapshots/CohortContrastDataVisualSnapshot.rds\") getHeatmapPlot(ccObject) } # }"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/getPrevalencePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Prevalence Plot â getPrevalencePlot","title":"Generate a Prevalence Plot â getPrevalencePlot","text":"function generates prevalence plot using CohortContrast GUI object. extracts necessary components ccObject passes `plot_prevalence` function generate plot.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/getPrevalencePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Prevalence Plot â getPrevalencePlot","text":"","code":"getPrevalencePlot(ccObject)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/getPrevalencePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Prevalence Plot â getPrevalencePlot","text":"ccObject object returned CohortContrast GUI, typically created \"Create Visual Snapshot\" button pressed. contain target_row_annotation, target_col_annotation, target_matrix components.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/getPrevalencePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Prevalence Plot â getPrevalencePlot","text":"plot object generated `plot_prevalence`.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/getPrevalencePlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Prevalence Plot â getPrevalencePlot","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `ccObject` (visual snapshot) is already created via CohortContrast GUI ccObject <- readRDS(\"./visual_snapshots/CohortContrastDataVisualSnapshot.rds\") getPrevalencePlot(ccObject) } # }"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/getTimePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Time panel Plot â getTimePlot","title":"Generate a Time panel Plot â getTimePlot","text":"function generates time panel plot using CohortContrast GUI object. extracts necessary components ccObject passes `plot_time` function generate plot.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/getTimePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Time panel Plot â getTimePlot","text":"","code":"getTimePlot(ccObject)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/getTimePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Time panel Plot â getTimePlot","text":"ccObject object returned CohortContrast GUI, typically created \"Create Visual Snapshot\" button pressed. contain target_row_annotation, target_col_annotation, target_time_annotation target_matrix components.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/getTimePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Time panel Plot â getTimePlot","text":"plot object generated `plot_time`.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/getTimePlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Time panel Plot â getTimePlot","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `ccObject` (visual snapshot) is already created via CohortContrast GUI ccObject <- readRDS(\"./visual_snapshots/CohortContrastDataVisualSnapshot.rds\") getHeatmapPlot(ccObject) } # }"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/get_study_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for loading all of the study names saved in ./tmp/datasets â get_study_names","title":"Function for loading all of the study names saved in ./tmp/datasets â get_study_names","text":"Function loading study names saved ./tmp/datasets","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/get_study_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for loading all of the study names saved in ./tmp/datasets â get_study_names","text":"","code":"get_study_names(pathToResults)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/get_study_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for loading all of the study names saved in ./tmp/datasets â get_study_names","text":"pathToResults Path results folder, can project's working directory","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/handleFeatureSelection.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for handling feature selection â handleFeatureSelection","title":"Function for handling feature selection â handleFeatureSelection","text":"Function handling feature selection","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/handleFeatureSelection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for handling feature selection â handleFeatureSelection","text":"","code":"handleFeatureSelection(   data,   pathToResults,   topK,   prevalenceCutOff,   targetCohortId,   runZTests,   runLogitTests,   createOutputFiles = FALSE )"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/handleFeatureSelection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for handling feature selection â handleFeatureSelection","text":"data Data list object pathToResults Path results folder, can project's working directory topK numeric > set, keeps number features analysis. Maximum number features exported. prevalenceCutOff numeric > set, removes concepts present (target) prevalenceCutOff times targetCohortId Target cohort id runZTests boolean Z-tests runLogitTests boolean logit-tests createOutputFiles Boolean creating output files, default value TRUE","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/handleMapping.html","id":null,"dir":"Reference","previous_headings":"","what":"This function uses complementaryMappingTable to map concepts to custom names â handleMapping","title":"This function uses complementaryMappingTable to map concepts to custom names â handleMapping","text":"function uses complementaryMappingTable map concepts custom names","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/handleMapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function uses complementaryMappingTable to map concepts to custom names â handleMapping","text":"","code":"handleMapping(data, complementaryMappingTable, abstractionLevel = -1)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/handleMapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function uses complementaryMappingTable to map concepts to custom names â handleMapping","text":"data Data list object complementaryMappingTable Mappingtable mapping concept_ids present, columns CONCEPT_ID, CONCEPT_ID.new, CONCEPT_NAME.new, abstractionLevel Level abstraction, default -1 (imported data level)","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/handleTests.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for handling tests â handleTests","title":"Function for handling tests â handleTests","text":"Function handling tests","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/handleTests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for handling tests â handleTests","text":"","code":"handleTests(   data,   targetCohortId,   presenceFilter,   runZTests = TRUE,   runLogitTests = TRUE,   runKSTests = TRUE,   numCores = parallel::detectCores() - 1 )"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/handleTests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for handling tests â handleTests","text":"data Data list object targetCohortId Target cohort id presenceFilter numeric > set, removes features represented less given percentage runZTests boolean Z-tests runLogitTests boolean logit-tests runKSTests boolean KS-tests","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/idExists.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for controlling whether patient exists in a cohort â idExists","title":"Function for controlling whether patient exists in a cohort â idExists","text":"Function controlling whether patient exists cohort","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/idExists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for controlling whether patient exists in a cohort â idExists","text":"","code":"idExists(data, id)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/idExists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for controlling whether patient exists in a cohort â idExists","text":"data dataframe object SUBJECT_ID values id subject ID","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Match Pattern in Column Names â patterns","title":"Match Pattern in Column Names â patterns","text":"function searches specified patterns within column names provided. takes one patterns input returns list matches. pattern applied list column names, pattern match column, error thrown.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match Pattern in Column Names â patterns","text":"","code":"patterns(..., cols = character(0L))"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match Pattern in Column Names â patterns","text":"... Character, patterns search within column names. can provide multiple patterns separate arguments. cols character vector column names patterns matched. Defaults empty character vector, expects actual column names provided function properly.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match Pattern in Column Names â patterns","text":"list element corresponds pattern provided `...`.   list element contains indices column names `cols` match   respective pattern. pattern match column names, function   stop throw error indicating pattern(s) match.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/performKSAnalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"This function performs kolmogorov-smirnov tests on the patient concept occurrence date data target vs uniform distribution â performKSAnalysis","title":"This function performs kolmogorov-smirnov tests on the patient concept occurrence date data target vs uniform distribution â performKSAnalysis","text":"function performs kolmogorov-smirnov tests patient concept occurrence date data target vs uniform distribution","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/performKSAnalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function performs kolmogorov-smirnov tests on the patient concept occurrence date data target vs uniform distribution â performKSAnalysis","text":"","code":"performKSAnalysis(   data_features,   targetCohortId,   numCores = parallel::detectCores() - 1 )"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/performKSAnalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function performs kolmogorov-smirnov tests on the patient concept occurrence date data target vs uniform distribution â performKSAnalysis","text":"data_features Summarised data features targetCohortId Target cohort id numCores Number cores allocate parallel processing","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/performPrevalenceAnalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"This function performs Z-tests on the patient prevalence data target vs control â performPrevalenceAnalysis","title":"This function performs Z-tests on the patient prevalence data target vs control â performPrevalenceAnalysis","text":"function performs Z-tests patient prevalence data target vs control","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/performPrevalenceAnalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function performs Z-tests on the patient prevalence data target vs control â performPrevalenceAnalysis","text":"","code":"performPrevalenceAnalysis(   data_patients,   data_initial,   targetCohortId,   presenceFilter,   numCores = parallel::detectCores() - 1 )"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/performPrevalenceAnalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function performs Z-tests on the patient prevalence data target vs control â performPrevalenceAnalysis","text":"data_patients Prevalence data patients data_initial Imported cohort dataframe targetCohortId Target cohort id presenceFilter Presence filter 0-1, 0.1 feature present least 10 percent patients numCores Number cores allocate parallel processing","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/performPrevalenceAnalysisLogistic.html","id":null,"dir":"Reference","previous_headings":"","what":"This function learns separate logistic regression models on the patient prevalence data target vs control â performPrevalenceAnalysisLogistic","title":"This function learns separate logistic regression models on the patient prevalence data target vs control â performPrevalenceAnalysisLogistic","text":"function learns separate logistic regression models patient prevalence data target vs control","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/performPrevalenceAnalysisLogistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function learns separate logistic regression models on the patient prevalence data target vs control â performPrevalenceAnalysisLogistic","text":"","code":"performPrevalenceAnalysisLogistic(   data_patients,   data_initial,   targetCohortId,   presenceFilter,   numCores = parallel::detectCores() - 1 )"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/performPrevalenceAnalysisLogistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function learns separate logistic regression models on the patient prevalence data target vs control â performPrevalenceAnalysisLogistic","text":"data_patients Prevalence data patients data_initial Imported cohort dataframe targetCohortId Target cohort id presenceFilter Presence filter 0-1, 0.1 feature present least 10 percent patients numCores Number cores allocate parallel processing","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/printCustomMessage.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for logging prints â printCustomMessage","title":"Function for logging prints â printCustomMessage","text":"Function logging prints","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/printCustomMessage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for logging prints â printCustomMessage","text":"","code":"printCustomMessage(message)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/printCustomMessage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for logging prints â printCustomMessage","text":"message Message show","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/queryHeritageData.html","id":null,"dir":"Reference","previous_headings":"","what":"This function outputs a list of domain specigic data which is filtered by the worfklow configuration â queryHeritageData","title":"This function outputs a list of domain specigic data which is filtered by the worfklow configuration â queryHeritageData","text":"function outputs list domain specigic data filtered worfklow configuration","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/queryHeritageData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function outputs a list of domain specigic data which is filtered by the worfklow configuration â queryHeritageData","text":"","code":"queryHeritageData(   dataPatient,   cdm,   split_data,   complementaryMappingTable = NULL )"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/queryHeritageData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function outputs a list of domain specigic data which is filtered by the worfklow configuration â queryHeritageData","text":"dataPatient Data selected patients cdm Connection database split_data Data split heritage complementaryMappingTable Mappingtable mapping concept_ids present","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/resolveCohortTableOverlaps.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve overlaps inside the cohort table â resolveCohortTableOverlaps","title":"Resolve overlaps inside the cohort table â resolveCohortTableOverlaps","text":"Resolve overlaps inside cohort table","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/resolveCohortTableOverlaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve overlaps inside the cohort table â resolveCohortTableOverlaps","text":"","code":"resolveCohortTableOverlaps(cohortTable, cdm)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/resolveCohortTableOverlaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve overlaps inside the cohort table â resolveCohortTableOverlaps","text":"cohortTable table cohort table characteristics cdm CDMConnector object: connection database","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/resolveCohortTableOverlaps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resolve overlaps inside the cohort table â resolveCohortTableOverlaps","text":"dataframe like cohort table resolved overlaps","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/resolveConceptNameOverlap.html","id":null,"dir":"Reference","previous_headings":"","what":"This function resolves concept name/label overlaps â resolveConceptNameOverlap","title":"This function resolves concept name/label overlaps â resolveConceptNameOverlap","text":"function resolves concept name/label overlaps","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/resolveConceptNameOverlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function resolves concept name/label overlaps â resolveConceptNameOverlap","text":"","code":"resolveConceptNameOverlap(data)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/resolveConceptNameOverlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function resolves concept name/label overlaps â resolveConceptNameOverlap","text":"data Data list object","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/runCohortContrastGUI.html","id":null,"dir":"Reference","previous_headings":"","what":"This function initiates the connection with database and starts Shiny application â runCohortContrastGUI","title":"This function initiates the connection with database and starts Shiny application â runCohortContrastGUI","text":"function initiates connection database starts Shiny application","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/runCohortContrastGUI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function initiates the connection with database and starts Shiny application â runCohortContrastGUI","text":"","code":"runCohortContrastGUI(pathToResults = NULL)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/runCohortContrastGUI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function initiates the connection with database and starts Shiny application â runCohortContrastGUI","text":"pathToResults Path target directory results saved","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/runTrajectoryViz.html","id":null,"dir":"Reference","previous_headings":"","what":"This function start up TrajectoryViz package GUI with the C2T output â runTrajectoryViz","title":"This function start up TrajectoryViz package GUI with the C2T output â runTrajectoryViz","text":"function start TrajectoryViz package GUI C2T output","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/runTrajectoryViz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function start up TrajectoryViz package GUI with the C2T output â runTrajectoryViz","text":"","code":"runTrajectoryViz(data)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/runTrajectoryViz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function start up TrajectoryViz package GUI with the C2T output â runTrajectoryViz","text":"data Cohort2Trajectory output object","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/runTrajectoryViz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function start up TrajectoryViz package GUI with the C2T output â runTrajectoryViz","text":"","code":"if (FALSE) { # \\dontrun{   data <- readRDS(\"./snapshots/CohortContrastDataSnapshot.rds\")   user <- Sys.getenv(\"DB_USERNAME\")   pw <- Sys.getenv(\"DB_PASSWORD\")   server <- stringr::str_c(Sys.getenv(\"DB_HOST\"), \"/\", Sys.getenv(\"DB_NAME\"))   port <- Sys.getenv(\"DB_PORT\")    cdmSchema <-     Sys.getenv(\"OHDSI_CDM\")   cdmVocabSchema <-     Sys.getenv(\"OHDSI_VOCAB\")   cdmResultsSchema <-     Sys.getenv(\"OHDSI_RESULTS\")   writeSchema <-     Sys.getenv(\"OHDSI_WRITE\")   writePrefix <- \"cc_\"    db = DBI::dbConnect(     RPostgres::Postgres(),     dbname = Sys.getenv(\"DB_NAME\"),     host = Sys.getenv(\"DB_HOST\"),     user = Sys.getenv(\"DB_USERNAME\"),     password = Sys.getenv(\"DB_PASSWORD\"),     port = port   )    cdm <- CDMConnector::cdmFromCon(     con = db,     cdmSchema = cdmSchema,     achillesSchema = cdmResultsSchema,     writeSchema = list(schema = writeSchema, prefix = writePrefix)   )    data = CohortContrast::createC2TInput(data, cdm)    trajectories = CohortContrast::C2TCaller <- function(data, pathToResults = getwd())    CohortContrast::runTrajectoryViz(trajectories) } # }"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/sanitize.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanitize filenames not in correct format â sanitize","title":"Sanitize filenames not in correct format â sanitize","text":"Sanitize filenames correct format","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/sanitize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanitize filenames not in correct format â sanitize","text":"","code":"sanitize(input_strings)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/sanitize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanitize filenames not in correct format â sanitize","text":"input_strings vector state label names","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/sanitize_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to sanitize a single string â sanitize_single","title":"Function to sanitize a single string â sanitize_single","text":"Function sanitize single string","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/sanitize_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to sanitize a single string â sanitize_single","text":"","code":"sanitize_single(input_string)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/sanitize_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to sanitize a single string â sanitize_single","text":"input_string  state label name","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/saveResult.html","id":null,"dir":"Reference","previous_headings":"","what":"This function saves the resulting data object â saveResult","title":"This function saves the resulting data object â saveResult","text":"function saves resulting data object","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/saveResult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function saves the resulting data object â saveResult","text":"","code":"saveResult(data, pathToResults)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/saveResult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function saves the resulting data object â saveResult","text":"data Data list object pathToResults Path results folder, can project's working directory complName Optional, name rds file saved","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/save_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for saving summary tables to path â save_object","title":"Function for saving summary tables to path â save_object","text":"Function saving summary tables path","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/save_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for saving summary tables to path â save_object","text":"","code":"save_object(object, path)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/save_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for saving summary tables to path â save_object","text":"object Object save path Path file saved","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/scale_to_1_0.html","id":null,"dir":"Reference","previous_headings":"","what":"# Function to normalize and scale a vector â scale_to_1_0","title":"# Function to normalize and scale a vector â scale_to_1_0","text":"# Function normalize scale vector","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/scale_to_1_0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"# Function to normalize and scale a vector â scale_to_1_0","text":"","code":"scale_to_1_0(x)"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/scale_to_1_0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"# Function to normalize and scale a vector â scale_to_1_0","text":"x Array numeric","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/stop_with_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop with Formatted and Translated Error Message â stop_with_format","title":"Stop with Formatted and Translated Error Message â stop_with_format","text":"function stops execution throwing error formatted message. message can translated based specified domain. typically used within package standardize error messages potentially support multilingual error outputs.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/stop_with_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop with Formatted and Translated Error Message â stop_with_format","text":"","code":"stop_with_format(fmt, ..., domain = \"R-data.table\")"},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/stop_with_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop with Formatted and Translated Error Message â stop_with_format","text":"fmt character string providing formatting template message. string can include placeholders filled data additional arguments passed `...`. ... Additional arguments used formatting message string. typically values variables inserted `fmt` template. domain Character string specifying translation domain. useful packages provide translations messages. Defaults \"R-data.table\", changed reflect domain package used translation.","code":""},{"path":"https://healthinformaticsut.github.io/CohortContrast/reference/stop_with_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stop with Formatted and Translated Error Message â stop_with_format","text":"function return value; interrupts function execution   throwing error formatted possibly translated message.","code":""}]
